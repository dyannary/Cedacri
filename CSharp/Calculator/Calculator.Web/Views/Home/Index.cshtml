@model CalculatorModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="\css\site.css">
    <title>Calculator</title>
</head>
 
<body>
    <form method="post" action="Home/CalculateExpression">
        <div class="wrapper">
            <input class="screen" name="expressionScreen" value="@Model.Expression">
            </input>
            <section class="calc-buttons">

                <div class="calc-button-row">
                    <button class="calc-button double" onclick="clearScreen()">
                        C
                    </button>
                    <button class="calc-button" onclick="deleteLastChar()">
                        &larr;
                    </button>
                </div>

                <div class="calc-button-row">
                    <button class="calc-button" onclick="appendToExpression('(')">
                        (
                    </button>
                    <button class="calc-button" onclick="appendToExpression(')')">
                        )
                    </button>
                    <button class="calc-button" onclick="">
                        ^
                    </button>
                    <button class="calc-button" onclick="appendToExpression('÷')">
                        &divide;
                    </button>
                </div>

                <div class="calc-button-row">
                    <button class="calc-button" onclick="appendToExpression('7')">
                        7
                    </button>
                    <button class="calc-button" onclick="appendToExpression('8')">
                        8
                    </button>
                    <button class="calc-button" onclick="appendToExpression('9')">
                        9
                    </button>
                    <button class="calc-button" onclick="appendToExpression('×'); appendToExpression('*')">
                        &times;
                    </button>
                </div>

                <div class="calc-button-row">
                    <button class="calc-button" onclick="appendToExpression('4')">
                        4
                    </button>
                    <button class="calc-button" onclick="appendToExpression('5')">
                        5
                    </button>
                    <button class="calc-button" onclick="appendToExpression('6')">
                        6
                    </button>
                    <button class="calc-button" onclick="appendToExpression('-')">
                        &minus;
                    </button>
                </div>

                <div class="calc-button-row">
                    <button class="calc-button" onclick="appendToExpression('1')">
                        1
                    </button>
                    <button class="calc-button" onclick="appendToExpression('2')">
                        2
                    </button>
                    <button class="calc-button" onclick="appendToExpression('3')">
                        3
                    </button>
                    <button class="calc-button" onclick="appendToExpression('+')">
                        &plus;
                    </button>
                </div>

                <div class="calc-button-row">
                    <button class="calc-button" onclick="appendToExpression('+-')">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-slash-minus" viewBox="0 0 16 16">
                            <path d="m1.854 14.854 13-13a.5.5 0 0 0-.708-.708l-13 13a.5.5 0 0 0 .708.708M4 1a.5.5 0 0 1 .5.5v2h2a.5.5 0 0 1 0 1h-2v2a.5.5 0 0 1-1 0v-2h-2a.5.5 0 0 1 0-1h2v-2A.5.5 0 0 1 4 1m5 11a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5A.5.5 0 0 1 9 12" />
                        </svg>
                    </button>
                    <button class="calc-button" onclick="appendToExpression('0')">
                        0
                    </button>
                    <button class="calc-button" onclick="appendToExpression('.')">
                        .
                    </button>
                    <button class="calc-button" onclick="calculate()">
                        &equals;
                    </button>
                </div>

            </section>
        </div>
    </form>
 @* 
    <script>
        function clearScreen() {
            document.getElementById('expressionScreen').innerText = '0';
        }

        function deleteLastChar() {
            var expression = document.getElementById('expressionScreen').innerText;

            document.getElementById('expressionScreen').innerText = expression.slice(0, -1);

        }

        function appendToExpression(char) {
            var expression = document.getElementById('expressionScreen').innerText;
            var lastChar = expression[expression.length - 1];

            var noRepeatChars = ['(', ')', '+', '-', '*', '÷', '.'];
            if (noRepeatChars.includes(lastChar) && lastChar === char) {
                return;
            }
            if (expression === '0') {
                document.getElementById('expressionScreen').innerText = char;
            } else {
                document.getElementById('expressionScreen').innerText += char;
            }
        }

        function calculate() {
            debugger
            var expression = document.getElementById('expressionScreen').innerText;

            // Make a POST request to the controller endpoint
            fetch('Home/CalculateExpression', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(expression)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Update the HTML with the result
                    document.getElementById('expressionScreen').innerText = data.result;
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script> *@
</body>
</html>
